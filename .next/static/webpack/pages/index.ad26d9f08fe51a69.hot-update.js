/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// import React, { useState, useEffect } from 'react';  \n// import { Authenticator } from '@aws-amplify/ui-react';  \n// import { Amplify } from 'aws-amplify';  \n// import '@aws-amplify/ui-react/styles.css';  \n// import { cognitoUserPoolsTokenProvider } from 'aws-amplify/auth/cognito';  \n// import { defaultStorage } from 'aws-amplify/utils';  \n// import outputs from '../amplify_outputs.json';  \n// import { fetchAuthSession } from 'aws-amplify/auth';  \n// // 配置 AWS Amplify  \n// Amplify.configure(outputs);  \n// cognitoUserPoolsTokenProvider.setKeyValueStorage(defaultStorage);  \n// export default function Home() {  \n//   const [userEmail, setUserEmail] = useState<string | null>(null);  \n//   const [identityId, setIdentityId] = useState<string | null>(null);  \n//   const getSession = async () => {  \n//     try {  \n//       const session = await fetchAuthSession();  \n//       console.log('完整的 session:', session);  \n//       if (session && session.tokens) {  \n//         const idToken = session.tokens.idToken;  \n//         // 確保從 token 中獲取字符串  \n//         const idTokenString: string | null = (idToken && (idToken as any).getJwtToken) ? (idToken as any).getJwtToken() : null;  \n//         if (idTokenString) {  \n//           console.log('idToken as string:', idTokenString);  \n//           await getIdFromCognito(idTokenString);  \n//         }  \n//       } else {  \n//         console.warn('Session 或 tokens 未定義');  \n//       }  \n//     } catch (error) {  \n//       console.error('獲取授權 session 出錯:', error);  \n//     }  \n//   };  \n//   const getIdFromCognito = async (idToken: string) => {  \n//     try {  \n//       const response = await fetch('/api/getId', {  \n//         method: 'POST',  \n//         headers: {  \n//           'Content-Type': 'application/json',  \n//         },  \n//         body: JSON.stringify({  \n//           IdentityPoolId: 'ap-northeast-2:844c51eb-ddfa-4c15-8042-e8cf1b0487fb',  \n//           LoginProvider: 'cognito-idp.ap-northeast-2.amazonaws.com/ap-northeast-2_CNXJJCt2G',  \n//           IdToken: idToken,  \n//         }),  \n//       });  \n//       if (response.ok) {  \n//         const data = await response.json();  \n//         console.log('GetId Response:', data);  \n//         if (data.IdentityId) {  \n//           setIdentityId(data.IdentityId);  \n//           await getCredentialsFromCognito(data.IdentityId, idToken);  \n//         }  \n//       } else {  \n//         const errorData = await response.json();  \n//         console.error('GetId API 錯誤:', errorData);  \n//       }  \n//     } catch (error) {  \n//       console.error('調用 GetId API 出錯:', error);  \n//     }  \n//   };  \n//   const getCredentialsFromCognito = async (identityId: string, idToken: string) => {  \n//     try {  \n//       const response = await fetch('/api/getCredentials', {  \n//         method: 'POST',  \n//         headers: {  \n//           'Content-Type': 'application/json',  \n//         },  \n//         body: JSON.stringify({  \n//           IdentityId: identityId,  \n//           Logins: {  \n//             'cognito-idp.ap-northeast-2.amazonaws.com/ap-northeast-2_CNXJJCt2G': idToken,  \n//           },  \n//         }),  \n//       });  \n//       if (response.ok) {  \n//         const credentialsData = await response.json();  \n//         console.log('GetCredentials Response:', credentialsData);  \n//       } else {  \n//         const errorData = await response.json();  \n//         console.error('GetCredentials API 錯誤:', errorData);  \n//       }  \n//     } catch (error) {  \n//       console.error('調用 GetCredentials API 出錯:', error);  \n//     }  \n//   };  \n//   useEffect(() => {  \n//     if (userEmail) {  \n//       getSession();  \n//     }  \n//   }, [userEmail]);  \n//   const handleLogin = async () => {  \n//     if (userEmail) {  \n//       try {  \n//         const response = await fetch(`/api/getStreamingURL?email=${encodeURIComponent(userEmail)}`, {  \n//           method: 'GET',  \n//         });  \n//         if (response.ok) {  \n//           const data = await response.json();  \n//           window.location.href = data.streamingUrl;  \n//         } else {  \n//           const data = await response.json();  \n//           console.error('錯誤:', data.error);  \n//         }  \n//       } catch (error) {  \n//         console.error('獲取串流 URL 失敗:', error);  \n//       }  \n//     }  \n//   };  \n//   const handleSignOut = (signOut: () => void = () => {}) => {  \n//     localStorage.removeItem('authToken');  \n//     sessionStorage.clear();  \n//     setUserEmail(null);  \n//     setIdentityId(null);  \n//     signOut();  \n//   };  \n//   return (  \n//     <Authenticator hideSignUp>  \n//       {({ signOut, user }) => {  \n//         if (user) {  \n//           const email = user.signInDetails?.loginId;  \n//           if (email && userEmail !== email) {  \n//             setUserEmail(email);  \n//           }  \n//         }  \n//         return (  \n//           <main>  \n//             <p>User email: {userEmail !== null ? userEmail : 'Loading...'}</p>  \n//             <div className=\"flex flex-col space-y-4\">  \n//               <button onClick={handleLogin} className=\"btn\">  \n//                 登入並獲取串流 URL  \n//               </button>  \n//               <button onClick={() => handleSignOut(signOut)} className=\"btn\">  \n//                 登出  \n//               </button>  \n//             </div>  \n//           </main>  \n//         );  \n//       }}  \n//     </Authenticator>  \n//   );  \n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.tsx\n"));

/***/ })

});